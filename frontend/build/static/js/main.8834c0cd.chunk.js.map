{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","setNotes","notes","label","important","content","onClick","id","axios","delete","then","response","data","console","log","filter","successStyle","color","background","font_size","border_style","border_radius","padding","margin_bottom","errorStyle","Notification","message","includes","style","className","baseUrl","newObject","post","put","App","useState","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","get","res","notesToShow","map","find","n","changedNote","noteService","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","Math","random","concat","value","onChange","target","type","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.8834c0cd.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst Note = ({ note, toggleImportance, setNotes, notes }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n    const del = (id) => {\r\n      axios.delete(\"/api/notes/\"+id)\r\n      .then(response => {\r\n        if(response.data != null){\r\n          console.log(\"Item deleted\");\r\n          setNotes(notes.filter(note => note.id !== id));\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n  return (\r\n    <li>\r\n      {note.content} \r\n      <button onClick={toggleImportance}>{label}</button>\r\n      <button onClick={() => {del(note.id)}}>Delete</button>\r\n    </li>\r\n  )\r\n}\r\nexport default Note;\r\n","import React from 'react'\r\n\r\nconst successStyle = {\r\n  color: 'green',\r\n  background: 'lightgrey',\r\n  font_size: 20,\r\n  border_style: 'solid',\r\n  border_radius: 5,\r\n  padding: 10,\r\n  margin_bottom: 10\r\n}\r\n\r\nconst errorStyle = {\r\n  color: 'red',\r\n  background: 'lightgrey',\r\n  font_size: 20,\r\n  border_style: 'solid',\r\n  border_radius: 5,\r\n  padding: 10,\r\n  margin_bottom: 10\r\n}\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n\r\n    if (message.includes('Error')){\r\n      return (\r\n        <div style={errorStyle} className=\"error\">\r\n          {message}\r\n        </div>\r\n      )\r\n    } if (message.includes('Success')) {\r\n      return (\r\n        <div style={successStyle} className=\"error\">\r\n          {message}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default Notification","\r\nimport axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleted = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(() => this.setState({ status: 'Delete successful' }));\r\n}\r\n\r\nexport default { getAll, create, update, deleted }","import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Note from \"./components/Note\";\nimport Notification from './components/Notification'\nimport './styles.css'\n\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState(\"a new note...\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null)\n\n\n  useEffect(() => {\n    axios\n      .get('/api/notes')\n      .then(res => {\n        setNotes(res.data)\n      })\n  }, [])\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n    .update(id, changedNote)\n    .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `ERROR: Note '${note.content}' was already removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setNotes(notes.filter(n => n.id !== id))\n    })\n  }\n\n  \n\nconst addNote = event => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() < 0.5,\n    }\n  \n   \n    noteService\n    .create(noteObject)\n    .then(returnedNote => {\n      setErrorMessage(\"Successfully added \"+  noteObject.content)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000);\n\n      \n      setNotes(notes.concat(returnedNote))\n      setNewNote('')\n    })  \n      .catch(error => {\n        setErrorMessage(\"Sorry Error: Your input is shorter than the minimum allowed length (5)\" )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000);\n      console.log(error.response.data)\n       \n      })\n      \n  \n\n}\n\n  \n\n  const handleChange = (event) => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((notes) => notes.important === true);\n\n\n \n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note key={note.id} note={note} notes={notes} setNotes={setNotes} toggleImportance={() => toggleImportanceOf(note.id)}/>\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\n\nimport App from './App';\n\nReactDOM.createRoot(document.getElementById('root')).render(<App />)\n\n\n\n\n \n"],"sourceRoot":""}